{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Layout from '../../component/layout';\nimport getCampaigns from '../../ethereum/campaign';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\n\nclass View extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderSummary\", () => {\n      const {\n        minContribution,\n        balance,\n        approversCount,\n        requestsCount,\n        manager\n      } = this.props;\n      const item = [{\n        header: manager,\n        description: 'managers address',\n        fluid: true\n      }, {\n        header: minContribution,\n        description: 'managers address',\n        fluid: true\n      }, {\n        header: approversCount,\n        description: 'managers address',\n        fluid: true\n      }, {\n        header: requestsCount,\n        description: 'managers address',\n        fluid: true\n      }, {\n        header: web3.utils.fromWei(balance, 'ether'),\n        description: 'managers address',\n        fluid: true\n      }];\n      return /*#__PURE__*/_jsx(Card.Group, {\n        items: item\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    const campaign = getCampaigns(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    console.log(summary);\n    return {\n      minContribution: summary[0],\n      balance: summary[1],\n      approversCount: summary[2],\n      requestsCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsx(Layout, {\n      children: this.renderSummary()\n    });\n  }\n\n}\n\nexport default View;","map":{"version":3,"sources":["E:/campaings/pages/Campaigns/view.js"],"names":["React","Layout","getCampaigns","factory","web3","View","Component","minContribution","balance","approversCount","requestsCount","manager","props","item","header","description","fluid","utils","fromWei","getInitialProps","campaign","query","address","summary","methods","getSummary","call","console","log","render","renderSummary"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAkC;AAAA;AAAA;;AAAA,2CAehB,MAAI;AACd,YAAM;AACFC,QAAAA,eADE;AAEFC,QAAAA,OAFE;AAGFC,QAAAA,cAHE;AAIFC,QAAAA,aAJE;AAKFC,QAAAA;AALE,UAMH,KAAKC,KANR;AAOA,YAAMC,IAAI,GAAC,CACN;AACGC,QAAAA,MAAM,EAAEH,OADX;AAEGI,QAAAA,WAAW,EAAC,kBAFf;AAGGC,QAAAA,KAAK,EAAE;AAHV,OADM,EAKH;AACAF,QAAAA,MAAM,EAAEP,eADR;AAEAQ,QAAAA,WAAW,EAAC,kBAFZ;AAGAC,QAAAA,KAAK,EAAE;AAHP,OALG,EAUP;AACIF,QAAAA,MAAM,EAAEL,cADZ;AAEIM,QAAAA,WAAW,EAAC,kBAFhB;AAGIC,QAAAA,KAAK,EAAE;AAHX,OAVO,EAeP;AACIF,QAAAA,MAAM,EAAEJ,aADZ;AAEIK,QAAAA,WAAW,EAAC,kBAFhB;AAGIC,QAAAA,KAAK,EAAE;AAHX,OAfO,EAoBP;AACIF,QAAAA,MAAM,EAAEV,IAAI,CAACa,KAAL,CAAWC,OAAX,CAAmBV,OAAnB,EAA2B,OAA3B,CADZ;AAEIO,QAAAA,WAAW,EAAC,kBAFhB;AAGIC,QAAAA,KAAK,EAAE;AAHX,OApBO,CAAX;AA2BA,0BAAO,KAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEH;AAAnB,QAAP;AACH,KAnD6B;AAAA;;AAC9B,eAAaM,eAAb,CAA6BP,KAA7B,EAAmC;AAC/B,UAAMQ,QAAQ,GAAElB,YAAY,CAACU,KAAK,CAACS,KAAN,CAAYC,OAAb,CAA5B;AACA,UAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB;AACCC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,WAAM;AACFhB,MAAAA,eAAe,EAAEgB,OAAO,CAAC,CAAD,CADtB;AAEFf,MAAAA,OAAO,EAAEe,OAAO,CAAC,CAAD,CAFd;AAGFd,MAAAA,cAAc,EAAEc,OAAO,CAAC,CAAD,CAHrB;AAIFb,MAAAA,aAAa,EAAEa,OAAO,CAAC,CAAD,CAJpB;AAKFZ,MAAAA,OAAO,EAAEY,OAAO,CAAC,CAAD;AALd,KAAN;AAQJ;;AAuCDM,EAAAA,MAAM,GAAE;AACJ,wBACI,KAAC,MAAD;AAAA,gBACK,KAAKC,aAAL;AADL,MADJ;AAMH;;AA3D6B;;AA+DlC,eAAezB,IAAf","sourcesContent":["import React from 'react';\r\nimport Layout from '../../component/layout';\r\nimport getCampaigns from '../../ethereum/campaign';\r\nimport factory from '../../ethereum/factory';\r\nimport web3 from '../../ethereum/web3';\r\n\r\nclass View extends React.Component{\r\n    static async getInitialProps(props){\r\n        const campaign= getCampaigns(props.query.address);\r\n        const summary = await campaign.methods.getSummary().call();\r\n         console.log(summary);\r\n         return{\r\n             minContribution: summary[0],\r\n             balance: summary[1],\r\n             approversCount: summary[2],\r\n             requestsCount: summary[3],\r\n             manager: summary[4]\r\n\r\n         }\r\n    }\r\n\r\n    renderSummary=()=>{\r\n        const {\r\n            minContribution,\r\n            balance,\r\n            approversCount,\r\n            requestsCount,\r\n            manager\r\n        }= this.props;\r\n        const item=[\r\n             {\r\n                header: manager,\r\n                description:'managers address',\r\n                fluid: true\r\n            },  {\r\n                header: minContribution,\r\n                description:'managers address',\r\n                fluid: true\r\n            },\r\n            {\r\n                header: approversCount,\r\n                description:'managers address',\r\n                fluid: true\r\n            },\r\n            {\r\n                header: requestsCount,\r\n                description:'managers address',\r\n                fluid: true\r\n            },\r\n            {\r\n                header: web3.utils.fromWei(balance,'ether'),\r\n                description:'managers address',\r\n                fluid: true\r\n            }\r\n\r\n        ]\r\n        return <Card.Group items={item}/>\r\n    }\r\n    render(){\r\n        return(\r\n            <Layout>\r\n                {this.renderSummary()}\r\n\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default View;"]},"metadata":{},"sourceType":"module"}